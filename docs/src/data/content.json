{
  "mast": {
    "marquees": [
      {
        "title": "This is a MarqueeText a React Component written in TypeScript.",
        "direction": "left",
        "duration": 35,
        "pauseOnHover": true
      },
      {
        "title": "Let's bring it back to the internet days of yore.",
        "direction": "right",
        "duration": 40,
        "pauseOnHover": true
      },
      {
        "title": "Created by Stephen Scaff for your text moving pleasure.",
        "direction": "left",
        "duration": 25,
        "pauseOnHover": true
      },
      {
        "title": "Snag it on NPM and get that text moving.",
        "direction": "right",
        "duration": 30,
        "pauseOnHover": true
      }
    ]
  },
  "intro": {
    "lead": "MarqueeText is a React component that takes it back to the internet of days gone by. Paying homage to the vintage (and beloved) Marquee element, MarqueeText inserts areas of continuous scrolling text, empowering your retro or brutalist-inspried designs."
  },
  "features": {
    "id": "features",
    "title": "üìå Features",
    "items": [
      "Built in Typescript.",
      "Creates continuous scrolling animations of text.",
      "Creates continuous loop effect by cloning text to ensure it fills container.",
      "Uses CSS animation.",
      "Scrolling animation starts / stops when text is in viewport (by default), via Intersection Observer",
      "Options to control scrolling direction and duration."
    ]
  },
  "quickStart": {
    "id": "quickstart",
    "title": "üéØ Quick Start",
    "install": "Simply install the package from npm",
    "use": "Now import <code>MarqueeText</code>, provide some text and pass in any desired options."
  },
  "options": {
    "id": "options",
    "title": "üß¨ Options",
    "optionsTable": [
      {
        "id": "children",
        "option": "<code>children</code>",
        "type": "<code>string</code>",
        "description": "React children for providing text as string",
        "default": "<code>null</code>"
      },
      {
        "id": "className",
        "option": "<code>className</code>",
        "type": "<code>string</code>",
        "description": "Defines a parent class name for BEM-like naming",
        "default": "<code>null</code>"
      },
      {
        "id": "direction",
        "option": "<code>direction</code>",
        "type": "<code>'left' | 'right'</code>",
        "description": "Direction of scroll animation",
        "default": "<code>left</code>"
      },
      {
        "id": "duration",
        "option": "<code>duration</code>",
        "type": "<code>number</code>",
        "description": "Amount of time it takes for original text to complete animation",
        "default": "<code>50</code>"
      },
      {
        "id": "textSpacing",
        "option": "<code>textSpacing</code>",
        "type": "<code>string</code>",
        "description": "Spacing between cloned text items",
        "default": "<code>0.15em</code>"
      },
      {
        "id": "pauseOnHover",
        "option": "<code>pauseOnHover</code>",
        "type": "<code>boolean</code>",
        "description": "Pauses scroll animation on hover",
        "default": "<code>false</code>"
      },
      {
        "id": "playOnlyInView",
        "option": "<code>playOnlyInView</code>",
        "type": "<code>string</code>",
        "description": "Only run play animation when component is visible in viewport",
        "default": "<code>true</code>"
      },
      {
        "id": "treshold",
        "option": "<code>treshold</code>",
        "type": "<code>number</code>",
        "description": "Intersection Observer value between 0 and 1 representing the percentage component must be visible before stagger animation starts.",
        "default": "<code>0.1</code>"
      },
      {
        "id": "willChange",
        "option": "<code>willChange</code>",
        "type": "<code>boolean</code>",
        "description": "Adds <code>will-change</code> to animation to potentially enhance animation performance",
        "default": "<code>false</code>"
      }
    ]
  },
  "useage": {
    "id": "useage",
    "title": "üïπÔ∏è Useage"
  },
  "notes": {
    "id": "notes",
    "title": "üìì Notes",
    "items": [
      {
        "title": "CSS Import",
        "content": "<p>As of v1.0.6, CSS Keyframe is injected so no css has to be imported. Animation should just work with no additional effort.</p>"
      },
      {
        "title": "Supports HTML tags",
        "content": "<p>MarqueeText supports HTML elements, so you can wrap your text in spans or divs to style specific words.</p>"
      }
    ]
  },
  "todos": {
    "id": "todos",
    "title": "üìÖ To Dos",
    "items": [
      "Add option to control animation based on scroll position.",
      "Maybe add some callbacks?",
      "Maybe add vertical scrolling option?",
      "Run more robust perf tests. Would js / RAF animation or WAAPI be better, esp for multiple instances?",
      "Add some proper tests"
    ]
  }
}
